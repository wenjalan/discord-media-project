{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Gallery","props","media","undefined","length","console","error","galleryRows","i","subset","slice","push","GalleryRow","items","className","itemDivs","index","forEach","item","GalleryItem","itemInfo","backgroundImageStyle","backgroundImage","url","onClick","window","open","style","App","useState","channelInfo","setChannelInfo","id","useParams","log","axios","get","serverUrl","then","res","info","data","catch","channelName","attachments","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","path","author","date","exact","document","getElementById"],"mappings":"wOASA,SAASA,EAAQC,GAEf,IAAMC,EAAQD,EAAMC,MAGpB,QAAcC,IAAVD,GAAwC,IAAjBA,EAAME,OAE/B,OADAC,QAAQC,MAAM,4BACN,oCAQV,IAJA,IAAIC,EAAc,GAITC,EAAI,EAAGA,EAAIN,EAAME,OAAQI,GADX,EACgC,CAErD,IAAIC,EAASP,EAAMQ,MAAMF,EAAGA,EAHP,GAMrBD,EAAYI,KAAK,cAACC,EAAD,CAAYC,MAAOJ,KAItC,OACE,qBAAKK,UAAU,UAAf,SACKP,IAMT,SAASK,EAAWX,GAElB,IAAMY,EAAQZ,EAAMY,MAGdE,EAAW,GAGbC,EAAQ,EAUZ,OATAH,EAAMI,SAAQ,SAACC,GAEbH,EAASJ,KACP,cAACQ,EAAD,CAAyBC,SAAUF,GAAjBF,IAEpBA,OAKA,qBAAKF,UAAU,cAAf,SAA8BC,IAKlC,SAASI,EAAYlB,GAEnB,IAAMmB,EAAWnB,EAAMmB,SAGnBC,EAAuB,CACzBC,gBAAiB,OAASF,EAASG,IAAM,KAI3C,OACE,qBACET,UAAU,eACVU,QAAS,kBAAMC,OAAOC,KAAKN,EAASG,IAAK,WACzCI,MAAON,IAmDEO,MA7Cf,SAAa3B,GAAO,MAEoB4B,mBAClC,CACE,QAAW,aACX,UAAa,aACb,SAAY,aACZ,YAAe,KAPH,mBAEXC,EAFW,KAEEC,EAFF,KAYZC,EAAKC,cAAYD,GAsBvB,OArBA3B,QAAQ6B,IAAI,mCAAqCF,GAGjDG,IAAMC,IACJC,kCAAsBL,GAEvBM,MAAK,SAACC,GAEL,IAAMC,EAAOD,EAAIE,KACjBpC,QAAQ6B,IAAI,sCAAwCF,GACpD3B,QAAQ6B,IAAIM,GACZT,EAAeS,MAEhBE,OAAM,SAACpC,GAEND,QAAQC,MAAM,6CAA+C0B,GAC7D3B,QAAQC,MAAMA,MAGIL,EAAM0C,YACZ1C,EAAMY,MAElB,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,6BAAK,IAAMgB,EAAYa,cACvB,qBAAK7B,UAAU,YACf,cAACd,EAAD,CAASE,MAAO4B,EAAYc,oBChHrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QC0CdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACE,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACE,cAAC,EAAD,CAAKd,YAAa,OAAQ9B,MA1Cb,CACnB,CACE6C,OAAQ,OACRnC,IAAK,kHACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,kHACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,2IACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,iHACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,iHACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,iHACLoC,KAAM,sBAER,CACED,OAAQ,OACRnC,IAAK,kHACLoC,KAAM,2BAUJ,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,yBAAlB,SACE,2CAINI,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.6d648ae9.chunk.js","sourcesContent":["import './App.css';\r\nimport { React, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// the url of the server to retrieve information from\r\nconst serverUrl = \"http://129.146.252.87:3001\"\r\n\r\n// creates a Gallery of images given a list of media urls\r\nfunction Gallery(props) {\r\n  // get urls from props\r\n  const media = props.media;\r\n\r\n  // if no media urls were given, complain\r\n  if (media === undefined || media.length === 0) {\r\n    console.error(\"Error loading media URLS\");\r\n    return (<h1>:)</h1>);\r\n  }\r\n\r\n  // create the rows of items\r\n  let galleryRows = [];\r\n\r\n  // do sets of 3 or less links at a time\r\n  const maxItemsPerRow = 4;\r\n  for (let i = 0; i < media.length; i += maxItemsPerRow) {\r\n    // get a subset of the links\r\n    let subset = media.slice(i, i + maxItemsPerRow);\r\n\r\n    // create a new row for each set of links\r\n    galleryRows.push(<GalleryRow items={subset}/>);\r\n  }\r\n\r\n  // return the gallery with its rows as children\r\n  return (\r\n    <div className=\"Gallery\">\r\n        {galleryRows}\r\n    </div>\r\n  )\r\n}\r\n\r\n// creates a row in the gallery, given a list of background image urls\r\nfunction GalleryRow(props) {\r\n  // retrieve items\r\n  const items = props.items;\r\n\r\n  // create divs for each item\r\n  const itemDivs = [];\r\n\r\n  // for each URL\r\n  let index = 0;\r\n  items.forEach((item) => {\r\n    // create a new Gallery Item and add it to itemDivs\r\n    itemDivs.push(\r\n      <GalleryItem key={index} itemInfo={item}/>\r\n    );\r\n    index++;\r\n  });\r\n\r\n  // return the items in a row\r\n  return (\r\n    <div className=\"Gallery-row\">{itemDivs}</div>\r\n  );\r\n}\r\n\r\n// creates an item in a row of a gallery, given an item's information\r\nfunction GalleryItem(props) {\r\n  // get the media url of this item\r\n  const itemInfo = props.itemInfo;\r\n\r\n  // create a background style for this item\r\n  let backgroundImageStyle = {\r\n    backgroundImage: \"url(\" + itemInfo.url + \")\"\r\n  }\r\n\r\n  // return an item\r\n  return (\r\n    <div\r\n      className=\"Gallery-item\"\r\n      onClick={() => window.open(itemInfo.url, \"_blank\")}\r\n      style={backgroundImageStyle}>\r\n      {/*{itemInfo.author + \" at \" + itemInfo.date}*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App(props) {\r\n  // state variables\r\n  const [channelInfo, setChannelInfo] = useState(\r\n      {\r\n        \"guildId\": \"loading...\",\r\n        \"channelId\": \"loading...\",\r\n        \"authorId\": \"loading...\",\r\n        \"attachments\": [],\r\n      }\r\n    );\r\n\r\n  // get the channel info from the server\r\n  const id = useParams().id;\r\n  console.log(\"Retrieving channel info with id \" + id);\r\n\r\n  // query server\r\n  axios.get(\r\n    serverUrl + \"/api/\" + id\r\n  )\r\n  .then((res) => {\r\n    // log\r\n    const info = res.data;\r\n    console.log('Retrieved channel info for channel ' + id);\r\n    console.log(info);\r\n    setChannelInfo(info);\r\n  })\r\n  .catch((error) => {\r\n    // log\r\n    console.error('Error retrieving channel info for channel ' + id);\r\n    console.error(error);\r\n  })\r\n\r\n  const channelName = props.channelName;\r\n  const items = props.items;\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>{\"#\" + channelInfo.channelName}</h1>\r\n        <div className=\"Divider\"/>\r\n        <Gallery media={channelInfo.attachments}/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\n// example items\r\nconst exampleItems = [\r\n  {\r\n    author: \"@wen\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842588587338104882/unknown.png?width=375&height=670\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@frn\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842595582032084992/unknown.png?width=514&height=670\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@nuq\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842588153722044446/cae3bde1de5e3627d16addafe2ba1ec1.png?width=377&height=670\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@elb\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842607169342144522/image0.png?width=376&height=669\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@fku\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842594741719924776/image0.jpg?width=376&height=669\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@mat\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842596401681793033/image0.png?width=309&height=670\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n  {\r\n    author: \"@bon\",\r\n    url: \"https://media.discordapp.net/attachments/722365245653385268/842592567866425345/unknown.png?width=591&height=670\",\r\n    date: \"2021-5-13 11:13 PM\",\r\n  },\r\n];\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename='/'>\r\n      <Route path=\"/:root/:id\">\r\n        <App channelName={\"pics\"} items={exampleItems}/>\r\n      </Route>\r\n      <Route exact path=\"/discord-media-project\">\r\n        <h1>:)</h1>\r\n      </Route>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}